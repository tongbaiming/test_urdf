<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/tbm/temp/rs_catkin_ws/src/rotors_simulator/rotors_description/urdf/erlecopter.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
  Copyright 2015 Fadri Furrer, ASL, ETH Zurich, Switzerland
  Copyright 2015 Michael Burri, ASL, ETH Zurich, Switzerland
  Copyright 2015 Mina Kamel, ASL, ETH Zurich, Switzerland
  Copyright 2015 Janosch Nikolic, ASL, ETH Zurich, Switzerland
  Copyright 2015 Markus Achtelik, ASL, ETH Zurich, Switzerland

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<robot name="erlecopter" xmlns:xacro="http://www.ros.org/xacro">
  <!-- Properties -->
  <!-- tbm change -->
  <!-- tbm change -->
  <!-- <xacro:property name="mesh_file" value="package://rotors_description/meshes/firefly.dae" /> -->
  <!-- [kg] -->
  <!-- tbm body_length new -->
  <!-- [m] 0.10 -->
  <!-- [m] 0.10 -->
  <!-- [m] -->
  <!-- [kg] -->
  <!-- tbm add these as in erlecopter original files-->
  <!-- [m] 0.1425  0.22 -->
  <!-- [m] 0.154  0.22 -->
  <!-- [m] 0.251  0.22 -->
  <!-- [m] 0.234  0.22 -->
  <!-- tbm arm_length no use -->
  <!-- <xacro:property name="arm_length" value="0.215" /> -->
  <!-- [m] -->
  <!-- [m] -->
  <!-- [m] -->
  <!-- [kg m/s^2] -->
  <!-- [m] -->
  <!-- [s] -->
  <!-- [s] -->
  <!-- [rad/s] -->
  <!-- Property Blocks -->
  <!-- inertia of a single rotor, assuming it is a cuboid. Height=3mm, width=15mm -->
  <!--
  <xacro:property name="rotor_inertia">
    <xacro:box_inertia x="${radius_rotor}" y="0.015" z="0.003" mass="${mass_rotor*rotor_velocity_slowdown_sim}" />
  </xacro:property>
  -->
  <!-- Included URDF Files -->
  <!-- Macro for the inertia of a box -->
  <!-- Macro for the inertial properties of a box -->
  <!-- Main multirotor link -->
  <!-- Rotor joint and link -->
  <!-- Instantiate multirotor_base_macro once -->
  <link name="party_1/base_link"/>
  <joint name="party_1/base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="party_1/base_link"/>
    <child link="party_1/base_link_inertia"/>
  </joint>
  <link name="party_1/base_link_inertia">
    <inertial>
      <mass value="1.1"/>
      <!-- [kg] -->
      <origin xyz="0 0 0"/>
      <inertia ixx="0.0347563" ixy="0.0" ixz="0.0" iyy="0.0458929" iyz="0.0" izz="0.0977"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://rotors_description/meshes/erlecopter_test_2.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.12 0.12 0.1"/>
        <!-- [m] [m] [m] -->
      </geometry>
    </collision>
  </link>
  <!-- attach multirotor_base_plugin to the base_link -->
  <gazebo>
    <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="multirotor_base_plugin">
      <robotNamespace>party_1</robotNamespace>
      <linkName>party_1/base_link</linkName>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <!-- Instantiate rotors -->
  <joint name="party_1/rotor_0_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.141 -0.141 0.03"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="party_1/base_link"/>
    <child link="party_1/rotor_0"/>
  </joint>
  <link name="party_1/rotor_0">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.0002400375" iyz="0.0" izz="0.0002409375"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://rotors_description/meshes/erlecopter_propeller_ccw" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.12"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="party_1_front_right_motor_model">
      <robotNamespace>party_1</robotNamespace>
      <jointName>party_1/rotor_0_joint</jointName>
      <linkName>party_1/rotor_0</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>0</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/0</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="party_1/rotor_0">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <joint name="party_1/rotor_1_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.141 0.141 0.03"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="party_1/base_link"/>
    <child link="party_1/rotor_1"/>
  </joint>
  <link name="party_1/rotor_1">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.0002400375" iyz="0.0" izz="0.0002409375"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://rotors_description/meshes/erlecopter_propeller_ccw" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.12"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="party_1_back_left_motor_model">
      <robotNamespace>party_1</robotNamespace>
      <jointName>party_1/rotor_1_joint</jointName>
      <linkName>party_1/rotor_1</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>1</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/1</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="party_1/rotor_1">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="party_1/rotor_2_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.141 0.141 0.03"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="party_1/base_link"/>
    <child link="party_1/rotor_2"/>
  </joint>
  <link name="party_1/rotor_2">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.0002400375" iyz="0.0" izz="0.0002409375"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://rotors_description/meshes/erlecopter_propeller_cw" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.12"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="party_1_front_left_motor_model">
      <robotNamespace>party_1</robotNamespace>
      <jointName>party_1/rotor_2_joint</jointName>
      <linkName>party_1/rotor_2</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>2</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/2</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="party_1/rotor_2">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <joint name="party_1/rotor_3_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.141 -0.141 0.03"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="party_1/base_link"/>
    <child link="party_1/rotor_3"/>
  </joint>
  <link name="party_1/rotor_3">
    <inertial>
      <mass value="0.005"/>
      <!-- [kg] -->
      <inertia ixx="9.75e-07" ixy="0.0" ixz="0.0" iyy="0.0002400375" iyz="0.0" izz="0.0002409375"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://rotors_description/meshes/erlecopter_propeller_cw" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.12"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="party_1_back_right_motor_model">
      <robotNamespace>party_1</robotNamespace>
      <jointName>party_1/rotor_3_joint</jointName>
      <linkName>party_1/rotor_3</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstantUp>0.0125</timeConstantUp>
      <timeConstantDown>0.025</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>8.54858e-06</motorConstant>
      <momentConstant>0.016</momentConstant>
      <commandSubTopic>gazebo/command/motor_speed</commandSubTopic>
      <motorNumber>3</motorNumber>
      <rotorDragCoefficient>8.06428e-05</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-06</rollingMomentCoefficient>
      <motorSpeedPubTopic>motor_speed/3</motorSpeedPubTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="party_1/rotor_3">
    <material>Gazebo/Black</material>
  </gazebo>
  <!--
	<xacro:property name="erlecopter_guidance_joint_2_origin_xyz" value="0 0 0" />
	<xacro:property name="erlecopter_guidance_joint_2_origin_rpy" value="0 0 0" />
	-->
  <!-- reference to the origin of erlecopter -->
  <!-- reference to the origin of guidance model in inventor -->
  <!-- reference to the gravity center -->
  <!-- true param
	<xacro:property name="guidance_inertia_ixx" value="0.002221554" />
	<xacro:property name="guidance_inertia_ixy" value="-0.000004287" />
	<xacro:property name="guidance_inertia_ixz" value="0.000015556" />
	<xacro:property name="guidance_inertia_iyy" value="0.001952311" />
	<xacro:property name="guidance_inertia_iyz" value="0.000003778" />
	<xacro:property name="guidance_inertia_izz" value="0.004017166" />
	<xacro:property name="guidance_mass" value="0.639" />
	-->
  <!-- fake param-->
  <!-- reference to the origin of erlecopter -->
  <!---0.02 ${-0.0005-half_left_right} -0.0888 ${PI} ${PI} 0 -0.02 ${-0.0005+half_left_right} -0.0888 {PI} ${PI} 0-->
  <!--
	<xacro:property name="erlecopter_guidance_joint_2_origin_xyz" value="0 0 0" />
	<xacro:property name="erlecopter_guidance_joint_2_origin_rpy" value="0 0 0" />
	-->
  <!-- reference to the origin of erlecopter -->
  <!-- reference to the origin of guidance model in inventor -->
  <!-- reference to the gravity center -->
  <!-- true param
	<xacro:property name="guidance_inertia_ixx" value="0.002221554" />
	<xacro:property name="guidance_inertia_ixy" value="-0.000004287" />
	<xacro:property name="guidance_inertia_ixz" value="0.000015556" />
	<xacro:property name="guidance_inertia_iyy" value="0.001952311" />
	<xacro:property name="guidance_inertia_iyz" value="0.000003778" />
	<xacro:property name="guidance_inertia_izz" value="0.004017166" />
	<xacro:property name="guidance_mass" value="0.639" />
	-->
  <!-- fake param-->
  <!-- reference to the origin of erlecopter -->
  <!---0.02 ${-0.0005-half_left_right} -0.0888 ${PI} ${PI} 0 -0.02 ${-0.0005+half_left_right} -0.0888 {PI} ${PI} 0-->
  <!--
		<xacro:property name="addon_file_directory" value="/home/tbm/temp/test_urdf/test_conclusion_1/" />
		<xacro:property name="addon_file_name" value="erlecopter_$(arg addon_type)_test_1.xacro" /> 
		-->
  <!--
		<xacro:unless value="${addon_code-1}">
			<xacro:include filename="/home/tbm/temp/test_urdf/test_conclusion_1/erlecopter_guidance_test_1.xacro" />
		</xacro:unless>
		<xacro:unless value="${addon_code-2}">
			<xacro:include filename="/home/tbm/temp/test_urdf/test_conclusion_1/erlecopter_lidar_test_1.xacro" />
		</xacro:unless>
		<xacro:unless value="${addon_code-3}">
			<xacro:include filename="/home/tbm/temp/test_urdf/test_conclusion_1/erlecopter_guidance_lidar_test_1.xacro" />
		</xacro:unless>
		-->
  <link name="lidar_link_1">
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
    </inertial>
    <collision>
      <geometry>
        <cylinder length="0.03" radius="0.035"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <cylinder length="0.03" radius="0.035"/>
      </geometry>
    </visual>
  </link>
  <gazebo reference="lidar_link_1">
    <sensor name="self_made_lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>1.5707963</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="self_made_lidar_controller_1">
        <robotNamespace>party_1</robotNamespace>
        <topicName>laser/scan/1</topicName>
        <frameName>lidar_link_1</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="erlecopter_lidar_joint_1" type="continuous">
    <origin rpy="0.52359877559 0 0" xyz="-0.04 0 0.065"/>
    <parent link="party_1/base_link_inertia"/>
    <child link="lidar_link_1"/>
    <axis xyz="0 0.5 0.866025404"/>
  </joint>
  <gazebo>
    <plugin filename="liblidar_test_plugin.so" name="lidar_test_plugin_1">
      <jointName>erlecopter_lidar_joint_1</jointName>
    </plugin>
  </gazebo>
  <link name="guidance_link_1">
    <inertial>
      <origin rpy="0 0 0" xyz="0.000305 0.000031 -0.023016"/>
      <mass value="6.39e-06"/>
      <inertia ixx="2.221554e-06" ixy="-4.287e-09" ixz="1.5556e-08" iyy="1.952311e-06" iyz="3.778e-09" izz="4.017166e-07"/>
    </inertial>
    <collision>
      <geometry>
        <mesh filename="file:///home/tbm/temp/test_models/models/guidance_2/meshes/untitled2.dae"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <mesh filename="file:///home/tbm/temp/test_models/models/guidance_2/meshes/untitled2.dae"/>
      </geometry>
    </visual>
  </link>
  <gazebo reference="guidance_link_1">
    <sensor name="stereo_camera_1" type="multicamera">
      <update_rate>50.0</update_rate>
      <camera name="left">
        <pose>0.1035 -0.0765 -0.0553 3.1415926 -0 0</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
        </image>
        <clip>
          <near>0.002</near>
          <far>3000</far>
        </clip>
      </camera>
      <camera name="right">
        <pose>0.1035 0.0755 -0.0553 3.1415926 -0 0</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
        </image>
        <clip>
          <near>0.002</near>
          <far>3000</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller_1">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <!-- need to be  -->
        <robotNamespace>party_1</robotNamespace>
        <!-- delete multisense_sl ok and add guidance not ok/ -->
        <cameraName>guidance_camera_1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info_1</cameraInfoTopicName>
        <frameName>left_camera_optical_frame</frameName>
        <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
    <sensor name="stereo_camera_2" type="multicamera">
      <update_rate>50.0</update_rate>
      <camera name="left">
        <pose>-0.1035 -0.0765 -0.0553 3.1415926 -0 -3.1415926</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
        </image>
        <clip>
          <near>0.002</near>
          <far>3000</far>
        </clip>
      </camera>
      <camera name="right">
        <pose>-0.1035 0.0755 -0.0553 3.1415926 -0 -3.1415926</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
        </image>
        <clip>
          <near>0.002</near>
          <far>3000</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller_2">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <!-- need to be  -->
        <robotNamespace>party_1</robotNamespace>
        <!-- delete multisense_sl ok and add guidance not ok/ -->
        <cameraName>guidance_camera_2</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info_2</cameraInfoTopicName>
        <frameName>left_camera_optical_frame</frameName>
        <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
    <sensor name="stereo_camera_3" type="multicamera">
      <update_rate>50.0</update_rate>
      <camera name="left">
        <pose>0.0005 0.028 -0.0553 3.1415926 0 1.5707963</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
        </image>
        <clip>
          <near>0.002</near>
          <far>3000</far>
        </clip>
      </camera>
      <camera name="right">
        <pose>0.0005 0.18 -0.0553 3.1415926 0 1.5707963</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
        </image>
        <clip>
          <near>0.002</near>
          <far>3000</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller_3">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <!-- need to be  -->
        <robotNamespace>party_1</robotNamespace>
        <!-- delete multisense_sl ok and add guidance not ok/ -->
        <cameraName>guidance_camera_3</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info_3</cameraInfoTopicName>
        <frameName>left_camera_optical_frame</frameName>
        <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
    <sensor name="stereo_camera_4" type="multicamera">
      <update_rate>50.0</update_rate>
      <camera name="left">
        <pose>0.0005 -0.18 -0.0553 3.1415926 -0 -1.5707963</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
        </image>
        <clip>
          <near>0.002</near>
          <far>3000</far>
        </clip>
      </camera>
      <camera name="right">
        <pose>0.0005 -0.028 -0.0553 3.1415926 -0 -1.5707963</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
        </image>
        <clip>
          <near>0.002</near>
          <far>3000</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller_4">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <!-- need to be  -->
        <robotNamespace>party_1</robotNamespace>
        <!-- delete multisense_sl ok and add guidance not ok/ -->
        <cameraName>guidance_camera_4</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info_4</cameraInfoTopicName>
        <frameName>left_camera_optical_frame</frameName>
        <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
    <sensor name="stereo_camera_5" type="multicamera">
      <update_rate>50.0</update_rate>
      <camera name="left">
        <pose>-0.020 0.0755 0.0888 3.1415926 -1.5707963 0</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
        </image>
        <clip>
          <near>0.002</near>
          <far>3000</far>
        </clip>
      </camera>
      <camera name="right">
        <pose>-0.020 0.0765 0.0888 3.1415926 -1.5707963 0</pose>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
        </image>
        <clip>
          <near>0.002</near>
          <far>3000</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller_5">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <!-- need to be  -->
        <robotNamespace>party_1</robotNamespace>
        <!-- delete multisense_sl ok and add guidance not ok/ -->
        <cameraName>guidance_camera_5</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info_5</cameraInfoTopicName>
        <frameName>left_camera_optical_frame</frameName>
        <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="erlecopter_guidance_joint_1" type="fixed">
    <origin rpy="3.1415926 0 0" xyz="0 0 -0.0373"/>
    <parent link="party_1/base_link_inertia"/>
    <child link="guidance_link_1"/>
  </joint>
  <!-- 
		<xacro:unless value="${instance-2}">
			<xacro:erlecopter_guidance_joint instance="${instance}"
	 		parent_link="${erlecopter_base_link}"
	 		child_link="guidance_link_${instance}"
			joint_origin_xyz="${erlecopter_guidance_joint_2_origin_xyz}"
			joint_origin_rpy="${erlecopter_guidance_joint_2_origin_rpy}"
			/>
		</xacro:unless>
		-->
</robot>

